git log
# to get all commits with their ids

diff -u oldfile newfile
# to compare two files to each other

-> helps to identify changes and bugs easily, because one can concentrate on the differences and ignore the rest
-> much quicker than comparing each and every line

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
-> easy to see progress
-> easier to spot differences and bugs
-> easy to use an older version, if a new one crashes beyond repair

A good rule of thumb is to make one commit per logical change.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
+ complete control
+ commits with logical context
- prone to user mistakes

git log --stat
# to see statistics to commits

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
-> Git is used for Code versioning where there typically are more than one file. In documents you usually have only one relevant file at the time.

git clone repositoryaddress
# to get a complete repository including the history

git config --global color.ui auto
# configure colored output for git

How can you use the commands git log and git diff to view the history of files?
-> you can compare the changes made to the files, track the amount of changes, etc.

git checkout commitid
# to get an older version of the repository, calling git log shows commitid as the most recent commit

How might using version control make you more confident to make changes that could break something?
-> I could switch back to an older, still working version whenever I want and I can compare old and new easily

git config --global core.editor "subl -n -w"
# to configure git with sublime

git config --global push.default upstream
git config --global merge.conflictstyle diff3
# to configure git accordingly

Now that you have your workspace set up, what do you want to try using Git for?
-> Blaaa
